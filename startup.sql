-- phpMyAdmin SQL Dump
-- version 4.8.5
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Дек 05 2019 г., 06:20
-- Версия сервера: 5.6.43
-- Версия PHP: 5.6.38

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `startup`
--

-- --------------------------------------------------------

--
-- Структура таблицы `authors`
--

CREATE TABLE `authors` (
  `id` int(11) UNSIGNED NOT NULL,
  `project_id` int(11) NOT NULL,
  `fio` varchar(255) NOT NULL,
  `role` varchar(255) NOT NULL,
  `experience` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `authors`
--

INSERT INTO `authors` (`id`, `project_id`, `fio`, `role`, `experience`) VALUES
(27, 24, 'Петров Петр Петрович', 'Директор', 'Символы в тексте могут повторяться. Средствами языка программирования определить информационный вес символа в строке, если известно, что данный текст содержит все символы некоторого алфавита. '),
(28, 24, 'Анютина Анна Васильевна', 'Заместитель главного', 'Символы в тексте могут повторяться. Средствами языка программирования определить информационный вес символа в строке, если известно, что данный текст содержит все символы некоторого алфавита. '),
(29, 24, 'Горбатов Никита Сергеевич', 'Советник', 'Символы в тексте могут повторяться. Средствами языка программирования определить информационный вес символа в строке, если известно, что данный текст содержит все символы некоторого алфавита. '),
(37, 32, 'Иванов Иван Иванович', 'Главный', 'Опыт работы: Символы в тексте могут повторяться. Средствами языка программирования определить информационный вес символа в строке, если известно, что данный текст содержит все символы некоторого алфавита. '),
(38, 32, 'Анютина Анна Васильевна', 'Заместитель главного', 'Роль в проекте: Заместитель главного\r\nОпыт работы: Символы в тексте могут повторяться. Средствами языка программирования определить информационный вес символа в строке, если известно, что данный текст содержит все символы некоторого алфавита.');

-- --------------------------------------------------------

--
-- Структура таблицы `desc_interview`
--

CREATE TABLE `desc_interview` (
  `id` int(11) UNSIGNED NOT NULL,
  `respond_id` int(11) NOT NULL,
  `date_fact` date NOT NULL,
  `description` text NOT NULL,
  `interview_file` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `desc_interview`
--

INSERT INTO `desc_interview` (`id`, `respond_id`, `date_fact`, `description`, `interview_file`) VALUES
(15, 12, '2019-12-03', 'Повседневная практика показывает, что рамки и место обучения кадров способствует подготовке и реализации новых предложений. Повседневная практика показывает, что новая модель организационной деятельности позволяет оценить значение соответствующих условий активизации. Значимость этих проблем настолько очевидна, что постоянное информационно-техническое обеспечение нашей деятельности требует от нас анализа направлений прогрессивного развития.\r\n\r\nРазнообразный и богатый опыт консультация с профессионалами из IT напрямую зависит от экономической целесообразности принимаемых решений! Соображения высшего порядка, а также начало повседневной работы по формированию позиции способствует подготовке и реализации дальнейших направлений развития проекта? Практический опыт показывает, что дальнейшее развитие различных форм деятельности требует от нас системного анализа существующих финансовых и административных условий? Соображения высшего порядка, а также сложившаяся структура организации позволяет оценить значение существующих финансовых и административных условий!\r\n\r\nРазнообразный и богатый опыт постоянное информационно-техническое обеспечение нашей деятельности позволяет оценить значение модели развития. Не следует, однако, забывать о том, что новая модель организационной деятельности влечет за собой процесс внедрения и модернизации позиций, занимаемых участниками в отношении поставленных задач. Значимость этих проблем настолько очевидна, что дальнейшее развитие различных форм деятельности обеспечивает актуальность направлений прогрессивного развития. Соображения высшего порядка, а также курс на социально-ориентированный национальный проект способствует подготовке и реализации ключевых компонентов планируемого обновления.\r\n\r\nРавным образом консультация с профессионалами из IT способствует подготовке и...', NULL),
(16, 1, '2019-12-03', 'Повседневная практика показывает, что рамки и место обучения кадров способствует подготовке и реализации новых предложений. Повседневная практика показывает, что новая модель организационной деятельности позволяет оценить значение соответствующих условий активизации. Значимость этих проблем настолько очевидна, что постоянное информационно-техническое обеспечение нашей деятельности требует от нас анализа направлений прогрессивного развития.\r\n\r\nРазнообразный и богатый опыт консультация с профессионалами из IT напрямую зависит от экономической целесообразности принимаемых решений! Соображения высшего порядка, а также начало повседневной работы по формированию позиции способствует подготовке и реализации дальнейших направлений развития проекта? Практический опыт показывает, что дальнейшее развитие различных форм деятельности требует от нас системного анализа существующих финансовых и административных условий? Соображения высшего порядка, а также сложившаяся структура организации позволяет оценить значение существующих финансовых и административных условий!\r\n\r\nРазнообразный и богатый опыт постоянное информационно-техническое обеспечение нашей деятельности позволяет оценить значение модели развития. Не следует, однако, забывать о том, что новая модель организационной деятельности влечет за собой процесс внедрения и модернизации позиций, занимаемых участниками в отношении поставленных задач. Значимость этих проблем настолько очевидна, что дальнейшее развитие различных форм деятельности обеспечивает актуальность направлений прогрессивного развития. Соображения высшего порядка, а также курс на социально-ориентированный национальный проект способствует подготовке и реализации ключевых компонентов планируемого обновления.\r\n\r\nРавным образом консультация с профессионалами из IT способствует подготовке и...', NULL),
(18, 13, '2019-12-04', 'Материалы полученные во время интервью', 'интернет маркетинг.doc');

-- --------------------------------------------------------

--
-- Структура таблицы `feedback_expert`
--

CREATE TABLE `feedback_expert` (
  `id` int(11) UNSIGNED NOT NULL,
  `interview_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `position` varchar(255) DEFAULT NULL,
  `feedback_file` varchar(255) DEFAULT NULL,
  `comment` varchar(255) NOT NULL,
  `date_feedback` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `feedback_expert`
--

INSERT INTO `feedback_expert` (`id`, `interview_id`, `title`, `name`, `position`, `feedback_file`, `comment`, `date_feedback`) VALUES
(1, 1, 'Отзыв 1', 'ФИО эксперта', 'Организация/Должность', NULL, 'Комментарий', '2019-12-02'),
(27, 1, 'Отзыв 2', 'ФИО эксперта', 'Организация/Должность', NULL, 'Комментарий', '2019-12-03');

-- --------------------------------------------------------

--
-- Структура таблицы `generation_problem`
--

CREATE TABLE `generation_problem` (
  `id` int(11) UNSIGNED NOT NULL,
  `interview_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `date_gps` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `generation_problem`
--

INSERT INTO `generation_problem` (`id`, `interview_id`, `title`, `description`, `date_gps`) VALUES
(1, 1, 'ГПС 1', 'Соображения высшего порядка, а также курс на социально-ориентированный национальный проект позволяет оценить значение соответствующих условий активизации! Равным образом социально-экономическое развитие способствует подготовке и реализации модели развития. Соображения высшего порядка, а также рамки и место обучения кадров требует от нас анализа модели развития.\r\n\r\nЗначимость этих проблем настолько очевидна, что начало повседневной работы по формированию позиции играет важную роль в формировании дальнейших направлений развитая системы массового участия!\r\n\r\nРавным образом курс на социально-ориентированный национальный проект представляет собой интересный эксперимент проверки экономической целесообразности принимаемых решений. Равным образом начало повседневной работы по формированию позиции требует от нас системного анализа системы масштабного изменения ряда параметров. С другой стороны выбранный нами инновационный путь способствует повышению актуальности соответствующих условий активизации.\r\n\r\nС другой стороны начало повседневной работы по формированию позиции способствует повышению актуальности модели развития. Разнообразный и богатый опыт реализация намеченного плана развития в значительной степени обуславливает создание системы обучения кадров, соответствующей насущным потребностям? С другой стороны реализация намеченного плана развития напрямую зависит от новых предложений. Не следует, однако, забывать о том, что повышение уровня гражданского сознания представляет собой интересный эксперимент проверки направлений прогрессивного развития. С другой стороны курс на социально-ориентированный национальный проект позволяет выполнить важнейшие задания по разработке существующих финансовых и административных условий. Не следует, однако, забывать о...', '2019-12-02'),
(8, 1, 'ГПС 2', 'Описание 3', '2019-12-03');

-- --------------------------------------------------------

--
-- Структура таблицы `interview`
--

CREATE TABLE `interview` (
  `id` int(11) UNSIGNED NOT NULL,
  `segment_id` int(11) NOT NULL,
  `count_respond` int(11) UNSIGNED NOT NULL,
  `greeting_interview` varchar(255) NOT NULL,
  `view_interview` varchar(255) NOT NULL,
  `reason_interview` varchar(255) NOT NULL,
  `question_1` enum('0','1') NOT NULL DEFAULT '1',
  `question_2` enum('0','1') NOT NULL DEFAULT '1',
  `question_3` enum('0','1') NOT NULL DEFAULT '1',
  `question_4` enum('0','1') NOT NULL DEFAULT '1',
  `question_5` enum('0','1') NOT NULL DEFAULT '1',
  `question_6` enum('0','1') NOT NULL DEFAULT '1',
  `question_7` enum('0','1') NOT NULL DEFAULT '1',
  `question_8` enum('0','1') NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `interview`
--

INSERT INTO `interview` (`id`, `segment_id`, `count_respond`, `greeting_interview`, `view_interview`, `reason_interview`, `question_1`, `question_2`, `question_3`, `question_4`, `question_5`, `question_6`, `question_7`, `question_8`) VALUES
(1, 40, 8, 'Приветствие в начале встречи!', 'Представление интервьюера!', 'Почему мне интересно!', '1', '1', '1', '0', '0', '0', '0', '0'),
(2, 26, 10, 'Приветствие в начале встречи', 'Представление интервьюера', 'Почему мне интересно', '1', '1', '0', '0', '0', '0', '0', '0');

-- --------------------------------------------------------

--
-- Структура таблицы `pre_files`
--

CREATE TABLE `pre_files` (
  `id` int(11) NOT NULL,
  `project_id` int(11) NOT NULL,
  `file_name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Структура таблицы `projects`
--

CREATE TABLE `projects` (
  `id` int(11) UNSIGNED NOT NULL,
  `user_id` int(11) NOT NULL,
  `created_at` date NOT NULL,
  `update_at` date NOT NULL,
  `project_fullname` varchar(255) DEFAULT NULL,
  `project_name` varchar(255) NOT NULL,
  `description` text,
  `rid` varchar(255) DEFAULT NULL,
  `patent_number` varchar(255) DEFAULT NULL,
  `patent_date` date DEFAULT NULL,
  `patent_name` text,
  `core_rid` text,
  `technology` varchar(255) DEFAULT NULL,
  `layout_technology` text,
  `register_name` varchar(255) DEFAULT NULL,
  `register_date` date DEFAULT NULL,
  `site` varchar(255) DEFAULT NULL,
  `invest_name` varchar(255) DEFAULT NULL,
  `invest_date` date DEFAULT NULL,
  `invest_amount` int(11) DEFAULT NULL,
  `date_of_announcement` date DEFAULT NULL,
  `announcement_event` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `projects`
--

INSERT INTO `projects` (`id`, `user_id`, `created_at`, `update_at`, `project_fullname`, `project_name`, `description`, `rid`, `patent_number`, `patent_date`, `patent_name`, `core_rid`, `technology`, `layout_technology`, `register_name`, `register_date`, `site`, `invest_name`, `invest_date`, `invest_amount`, `date_of_announcement`, `announcement_event`) VALUES
(24, 2, '2019-11-10', '2019-11-10', 'Полное название Вашего проекта 1 (Petrov)', 'Проект 1 (Petrov)', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов. ', 'Результат интеллектуальной деятельности', 'Номер патента', '2019-11-22', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов. ', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов. ', 'На какой технологии основан', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов. ', 'Зарегистрированное юр. лицо', '2019-11-18', 'Адрес сайта', 'Инвестор', '2019-11-13', 345346456, NULL, NULL),
(32, 5, '2019-11-17', '2019-12-05', 'Панамский канал. Возле входа в канал находится якорная стоянка, где куча судов стоит и ждет своей очереди на проход. ', 'Проект 1', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов. ', 'Наименование РИД', 'Номер патента', '2019-11-07', 'Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. ', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов. ', 'Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций.', 'Вот пример статьи на 1000 символов. Это достаточно маленький текст, оптимально подходящий для карточек товаров в интернет-магазинах или для небольших информационных публикаций. В таком тексте редко бывает более 2-3 абзацев и обычно один подзаголовок. Но можно и без него. На 1000 символов рекомендовано использовать 1-2 ключа и одну картину.\r\n\r\nТекст на 1000 символов – это сколько примерно слов? Статистика Word показывает, что «тысяча» включает в себя 150-200 слов средней величины. Но, если злоупотреблять предлогами, союзами и другими частями речи на 1-2 символа, то количество слов неизменно возрастает.\r\n\r\nВ копирайтерской деятельности принято считать «тысячи» с пробелами или без. Учет пробелов увеличивает объем текста примерно на 100-200 символов – именно столько раз мы разделяем слова свободным пространством. Считать пробелы заказчики не любят, так как это «пустое место». Однако некоторые фирмы и биржи видят справедливым ставить стоимость за 1000 символов с пробелами, считая последние важным элементом качественного восприятия. Согласитесь, читать слитный текст без единого пропуска, никто не будет. Но большинству нужна цена за 1000 знаков без пробелов.', 'Зарегистрированное юр. лицо', '2019-11-01', 'Адрес сайта', 'Инвестор', '2019-11-15', 2147483647, '2019-11-10', 'Мероприятие, на котором проект анонсирован впервые');

-- --------------------------------------------------------

--
-- Структура таблицы `questions`
--

CREATE TABLE `questions` (
  `id` int(11) UNSIGNED NOT NULL,
  `interview_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `status` enum('0','1') NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `questions`
--

INSERT INTO `questions` (`id`, `interview_id`, `title`, `status`) VALUES
(2, 1, 'Что нравится / не нравится в текущем положении вещей?', '1'),
(3, 1, 'Вас беспокоит данная ситуация?', '1'),
(4, 1, 'Новый вопрос', '1'),
(5, 2, 'Как и посредством какого инструмента / процесса вы справляетесь с задачей?', '1'),
(6, 2, 'Что нравится / не нравится в текущем положении вещей?', '1'),
(7, 2, 'Новый вопрос', '1');

-- --------------------------------------------------------

--
-- Структура таблицы `responds`
--

CREATE TABLE `responds` (
  `id` int(11) UNSIGNED NOT NULL,
  `interview_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `info_respond` varchar(255) DEFAULT NULL,
  `date_plan` date DEFAULT NULL,
  `place_interview` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `responds`
--

INSERT INTO `responds` (`id`, `interview_id`, `name`, `info_respond`, `date_plan`, `place_interview`) VALUES
(1, 1, 'Иванов Иван Иванович', 'Какие-то данные респондента Какие-то данные респондента', '2019-11-29', 'Место проведения Место проведения Место проведения'),
(2, 1, 'Карлов Виктор Иванович', 'Какие-то данные респондента Какие-то данные респондента', '2019-11-15', 'Место проведения Место проведения Место проведения'),
(7, 1, 'Никитин Петр Ильич', 'Какие-то данные респондента Какие-то данные респондента', '2019-12-01', 'Место проведения Место проведения Место проведения'),
(8, 1, 'Антонов Антон Петрович', 'Какие-то данные респондента Какие-то данные респондента', '2019-12-04', 'Место проведения Место проведения Место проведения'),
(9, 1, 'Респондент 5', '', NULL, ''),
(10, 1, 'Респондент 6', '', NULL, ''),
(11, 1, 'Респондент 7', '', NULL, ''),
(12, 1, 'Анютина Анна Николаевна', 'Какие-то данные респондента Какие-то данные респондента', '2019-12-03', 'Место проведения Место проведения Место проведения'),
(13, 2, 'Респондент 1', 'Какие-то данные респондента Какие-то данные респондента', '2019-12-01', 'Место проведения Место проведения Место проведения'),
(14, 2, 'Респондент 2', 'Какие-то данные респондента Какие-то данные респондента', '2019-12-02', 'Место проведения Место проведения Место проведения'),
(15, 2, 'Респондент 3', 'Какие-то данные респондента Какие-то данные респондента', '2019-12-07', 'Место проведения Место проведения Место проведения'),
(16, 2, 'Респондент 4', '', NULL, ''),
(17, 2, 'Респондент 5', '', NULL, ''),
(18, 2, 'Респондент 6', '', NULL, ''),
(19, 2, 'Респондент 7', '', NULL, ''),
(20, 2, 'Респондент 8', '', NULL, ''),
(21, 2, 'Респондент 9', '', NULL, ''),
(22, 2, 'Респондент 10', '', NULL, '');

-- --------------------------------------------------------

--
-- Структура таблицы `segments`
--

CREATE TABLE `segments` (
  `id` int(11) UNSIGNED NOT NULL,
  `project_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `field_of_activity` varchar(255) DEFAULT NULL,
  `sort_of_activity` varchar(255) DEFAULT NULL,
  `age` varchar(255) DEFAULT NULL,
  `income` varchar(255) DEFAULT NULL,
  `quantity` varchar(255) DEFAULT NULL,
  `market_volume` varchar(255) DEFAULT NULL,
  `add_info` text,
  `creat_date` date DEFAULT NULL,
  `plan_gps` date DEFAULT NULL,
  `fact_gps` date DEFAULT NULL,
  `plan_ps` date DEFAULT NULL,
  `fact_ps` date DEFAULT NULL,
  `plan_dev_gcp` date DEFAULT NULL,
  `fact_dev_gcp` date DEFAULT NULL,
  `plan_gcp` date DEFAULT NULL,
  `fact_gcp` date DEFAULT NULL,
  `plan_dev_gmvp` date DEFAULT NULL,
  `fact_dev_gmvp` date DEFAULT NULL,
  `plan_gmvp` date DEFAULT NULL,
  `fact_gmvp` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `segments`
--

INSERT INTO `segments` (`id`, `project_id`, `name`, `field_of_activity`, `sort_of_activity`, `age`, `income`, `quantity`, `market_volume`, `add_info`, `creat_date`, `plan_gps`, `fact_gps`, `plan_ps`, `fact_ps`, `plan_dev_gcp`, `fact_dev_gcp`, `plan_gcp`, `fact_gcp`, `plan_dev_gmvp`, `fact_dev_gmvp`, `plan_gmvp`, `fact_gmvp`) VALUES
(21, 32, 'Сегмент 1', 'Дороги в Эквадоре практически идеальные, хотя населенные пункты выглядят очень бедно. ', 'Дороги в Эквадоре практически идеальные, хотя населенные пункты выглядят очень бедно. ', '45 лет', '100000', '100000', '10000', 'Дороги в Эквадоре практически идеальные, хотя населенные пункты выглядят очень бедно. На дорогах много интересных машин, например очень много грузовиков - древних Фордов, которые я никогда раньше не видел. А еще несколько раз на глаза попадались старенькие Жигули :) ', '2019-11-17', '2019-12-17', NULL, '2020-01-16', NULL, '2020-02-15', NULL, '2020-03-16', NULL, '2020-04-15', NULL, '2020-05-15', NULL),
(26, 32, 'Сегмент 2', 'Неплохая одноместная каюта. Внутри несколько шкафов и полок, удобная кровать, койка напередохнуть, стол, стул, умывальник и внутрисудовой телефон. ', 'Неплохая одноместная каюта. Внутри несколько шкафов и полок, удобная кровать, койка напередохнуть, стол, стул, умывальник и внутрисудовой телефон. ', '35 лет', '100', '100000', '10000', 'Неплохая одноместная каюта. Внутри несколько шкафов и полок, удобная кровать, койка напередохнуть, стол, стул, умывальник и внутрисудовой телефон. Также выдали 2 белых офицерских комбинезона с символикой компании, каску и персональную рацию. ', '2019-11-18', '2019-12-18', NULL, '2020-01-17', NULL, '2020-02-16', NULL, '2020-03-17', NULL, '2020-04-16', NULL, '2020-05-16', NULL),
(40, 32, 'Сегмент 3', 'Сфера деятельности потребителя', 'Род деятельности потребителя', '35 лет', '100000', '100000', '10000', '', '2019-11-20', '2019-12-20', '2019-12-03', '2020-01-19', NULL, '2020-02-18', NULL, '2020-03-19', NULL, '2020-04-18', NULL, '2020-05-18', NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `user`
--

CREATE TABLE `user` (
  `id` int(11) UNSIGNED NOT NULL,
  `fio` varchar(255) NOT NULL,
  `telephone` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `auth_key` varchar(255) DEFAULT NULL,
  `role` varchar(255) NOT NULL DEFAULT 'user'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `user`
--

INSERT INTO `user` (`id`, `fio`, `telephone`, `email`, `username`, `password`, `auth_key`, `role`) VALUES
(2, 'Петров Петр Петрович', '22222222', 'Petrov@mail.com', 'Petrov', '$2y$13$..03.ntfn22PYJL8AwxP0uGZiVm51GqdUf9HGEKHBZkFpPo7kIuEe', 'D0ghG21D2hbH9iGUl0G8GlT8oaWvNA-C', 'user'),
(5, 'Иванов Иван Иванович', '2202020', 'ivanov@mail.com', 'Ivanov', '$2y$13$CxAHKuqoYDsF2J0wzHtlAuh17SI.RU5.BrT/DviYKzvlcJAPCzIh6', 'ktYshCZuqnMuexCEiy8chx8hG8d9Y8-e', 'user'),
(7, 'Васечкин', '333', 'Vasya@mail.com', 'Vasya', '$2y$13$7Cs/RM56jaEgRzq8n2RywO1078WeKOOci5a/qg/OAzGqy09qcSSTi', 'sgaNt8xtlReqzE19U8aaV8yZgACQ3Bkg', 'user'),
(8, 'Сидоров', '243243534', 'Sidorov@mail.com', 'Sidorov', '$2y$13$DOrU/gG3krdQg.JydZ489eMLDd/7kmAmHAVoZ83XCNm3qQiRCEDIC', '-FbXSF0QvmGt5BpsFp3f3aOUiVr-unWG', 'user'),
(9, 'Пронин Иван Петрович', '222222', 'Pronin@mai.com', 'Pronin', '$2y$13$FIsjZQJB70z0KcsqxNHKwOwhlSdfQS9NcAuSOtYrYxG.wevlT3Lqu', 'qMmUVxZVHjUQ7mGd7ESg2NkKbh7ztbGW', 'user'),
(10, 'Федотов', '444444', 'mihailionf@gmail.com', 'Mike', '$2y$13$/HjEEjWYWBGHA5VJQ/09heLFVk/HP263MSjs8qV..uphjU06oCvJa', 'aBz7QuJuiVkYSE2M5IXFHOiTFdA887YZ', 'user');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `authors`
--
ALTER TABLE `authors`
  ADD PRIMARY KEY (`id`),
  ADD KEY `project_id` (`project_id`);

--
-- Индексы таблицы `desc_interview`
--
ALTER TABLE `desc_interview`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `feedback_expert`
--
ALTER TABLE `feedback_expert`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `generation_problem`
--
ALTER TABLE `generation_problem`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `interview`
--
ALTER TABLE `interview`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `pre_files`
--
ALTER TABLE `pre_files`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `projects`
--
ALTER TABLE `projects`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `responds`
--
ALTER TABLE `responds`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `segments`
--
ALTER TABLE `segments`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `username` (`username`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `authors`
--
ALTER TABLE `authors`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=39;

--
-- AUTO_INCREMENT для таблицы `desc_interview`
--
ALTER TABLE `desc_interview`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT для таблицы `feedback_expert`
--
ALTER TABLE `feedback_expert`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=28;

--
-- AUTO_INCREMENT для таблицы `generation_problem`
--
ALTER TABLE `generation_problem`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT для таблицы `interview`
--
ALTER TABLE `interview`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT для таблицы `pre_files`
--
ALTER TABLE `pre_files`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `projects`
--
ALTER TABLE `projects`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=33;

--
-- AUTO_INCREMENT для таблицы `questions`
--
ALTER TABLE `questions`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT для таблицы `responds`
--
ALTER TABLE `responds`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=23;

--
-- AUTO_INCREMENT для таблицы `segments`
--
ALTER TABLE `segments`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=41;

--
-- AUTO_INCREMENT для таблицы `user`
--
ALTER TABLE `user`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
